name: CI/CD pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  tests:
    name: Prepare E2E tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Prepare for tests
        run: |
          sudo apt update
          sudo apt install -y python3-pip
          pip install -r requirements.txt
          docker build . --file Dockerfile --tag ${{secrets.YC_REGISTRY_ID}}/users-service:latest
          docker run -p 80:80 -d ${{secrets.YC_REGISTRY_ID}}/users-service:latest
          sleep 5

      - name: Run tests
        run: |
          py app/component_tests.py

  build_and_push:
    name: Build Docker Image and push to YC
    needs: tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag cr.yandex/${{secrets.YC_REGISTRY_ID}}/author-service:latest
    
    - name: Login to YC Registry
      uses: docker/login-action@v3.0.0 
      with:
        registry: cr.yandex
        username: json_key
        password: ${{secrets.YC_KEYS}}
 
    - name: Push tag to YC Registry
      run: docker push cr.yandex/${{secrets.YC_REGISTRY_ID}}/author-service:latest
  
  deploy:
    name: Deploy container in YC
    runs-on: ubuntu-latest
    needs: [build_and_push]
    steps:
      - name: Deploy serverless container
        uses: yc-actions/yc-sls-container-deploy@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_KEYS }}
          container-name: ${{ secrets.YC_CONTAINER_NAME }}
          folder-id: ${{ secrets.YC_FOLDER_ID }}
          revision-image-url: cr.yandex/${{ secrets.YC_REGISTRY_ID }}/author-service:latest
          revision-service-account-id: ${{ secrets.YC_SA_ID }}